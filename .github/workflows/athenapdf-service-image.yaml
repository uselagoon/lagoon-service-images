name: Publish athenapdf-service image

on:
  push:
    branches:
      - 'main'
      - 'build-image'
    paths:
      - 'athenapdf-service/**'
      - '.github/workflows/athenapdf-service-image.yaml'
    tags:
      - 'athenapdf-service-v*.*.*'
  pull_request:
    branches:
      - 'main'
    paths:
      - 'athenapdf-service/**'
      - '.github/workflows/athenapdf-service-image.yaml'


jobs:
  docker:
    permissions:
      attestations: write
      contents: write
      id-token: write
      packages: write
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout PR
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        if: ${{ github.event_name == 'pull_request' }}
        with:
          fetch-depth: "0"
          ref: ${{ github.event.pull_request.head.sha }}
      -
        name: Checkout Branch or Tag
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        if: ${{ github.event_name != 'pull_request' }}
        with:
          fetch-depth: "0"
      -
        name: Create SERVICE_TAG variable
        id: service_tag_var
        run: |
          RAW_TAG=$(git describe --abbrev=0 --tags --match 'athenapdf-service-*')
          SERVICE_TAG=${RAW_TAG#"athenapdf-service-"}
          echo "using athenapdf-service tag $SERVICE_TAG"
          echo "SERVICE_TAG=$SERVICE_TAG" >> "$GITHUB_ENV"
      -
        name: Set version for non-tag build
        if: "!startsWith(github.ref, 'refs/tags/athenapdf-service')"
        id: version_non-tag_build
        run: |
          DOCKER_TAG="${{ env.SERVICE_TAG }}-$(git rev-parse --short=8 HEAD)"
          echo "DOCKER_TAG=$DOCKER_TAG" >> "$GITHUB_ENV"
          echo "athenapdf-service version $DOCKER_TAG"
      -
        name: Set version for tag build
        if: "startsWith(github.ref, 'refs/tags/athenapdf-service')"
        id: version_tag_build
        run: |
          DOCKER_TAG=${{ env.SERVICE_TAG }}
          echo "DOCKER_TAG=$DOCKER_TAG" >> "$GITHUB_ENV"
          echo "athenapdf-service version $DOCKER_TAG"
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@369eb591f429131d6889c46b94e711f089e6ca96 # v5
        with:
          # list of Docker images to use as base name for tags
          images: |
            ${{ github.repository_owner }}/athenapdf-service
            ghcr.io/${{ github.repository_owner }}/athenapdf-service
          tags: |
            # set edge tag for default branch
            type=edge,enable={{is_default_branch}}
            # set tag+build for default branch
            type=raw,value=${{ env.DOCKER_TAG}},enable={{is_default_branch}}
            # tag event
            type=raw,value=${{ env.DOCKER_TAG}},enable=${{ startsWith(github.ref, 'refs/tags/athenapdf-service') }}
            type=raw,value=latest,enable=${{ startsWith(github.ref, 'refs/tags/athenapdf-service') }}
            # pull request event
            type=ref,event=pr
            # pull request event
            type=ref,event=branch
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf # v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@c47758b77c9736f4b2ef4073d4d51994fabfe349 # v3
      -
        name: Login to DockerHub
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Login to GHCR
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@48aba3b46d1b1fec4febb7c5d0c644b249a11355 # v6
        id: build-and-push
        with:
          context: athenapdf-service
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Attest dockerhub image
        uses: actions/attest-build-provenance@ef244123eb79f2f7a7e75d99086184180e6d0018 # v1.4.4
        with:
          subject-digest: ${{steps.build-and-push.outputs.digest}}
          subject-name: index.docker.io/${{ github.repository_owner }}/athenapdf-service
          push-to-registry: true
      - name: Attest ghcr image
        uses: actions/attest-build-provenance@ef244123eb79f2f7a7e75d99086184180e6d0018 # v1.4.4
        with:
          subject-digest: ${{steps.build-and-push.outputs.digest}}
          subject-name: ghcr.io/${{ github.repository_owner }}/athenapdf-service
          push-to-registry: true
      - uses: anchore/sbom-action@55dc4ee22412511ee8c3142cbea40418e6cec693 # v0.17.8
        if: startsWith(github.ref, 'refs/tags/')
        with:
          image: ghcr.io/${{ github.repository_owner }}/athenapdf-service@${{steps.build-and-push.outputs.digest}}
          output-file: sbom.spdx.json
          upload-artifact: false
          upload-release-assets: false
      - name: Release
        uses: softprops/action-gh-release@e7a8f85e1c67a31e6ed99a94b41bd0b71bbee6b8 # v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            sbom.spdx.json
